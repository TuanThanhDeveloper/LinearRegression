# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'UI.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import numpy as np
import csv
import matplotlib.pyplot as plt
from PyQt5.QtCore import QCoreApplication
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
gdp = []
years = []
population = []

# Years
for i in range(1995, 2021):
    years.append(i)

# load data GDP(PPP)
with open("data_GDP(PPP).csv") as csv_file:
    csv_data = csv.reader(csv_file, delimiter=',')
    for row in csv_data:
        if row[0] == 'Vietnam':
            for data in row[-27:-1]:
                gdp.append(float(data))

# load data population
with open("data_population.csv") as csv_file:
    csv_data = csv.reader(csv_file, delimiter=',')
    for row in csv_data:
        if row[0] == 'Vietnam':
            for data in row[-27:-1]:
                population.append(float(data))

# GDP per capital
gdp_per_cap = []
for i in range(len(gdp)):
    gdp_per_cap.append(gdp[i] / population[i])
print(gdp_per_cap)
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def __init__(self):
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.title = QtWidgets.QLabel(self.widget)
        self.label_year = QtWidgets.QLabel(self.widget)
        self.pushButton_predict = QtWidgets.QPushButton(self.widget)
        self.lineEdit_year = QtWidgets.QLineEdit(self.widget)
        self.label_predict = QtWidgets.QLabel(self.widget)
        self.pushButton_close = QtWidgets.QPushButton(self.widget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(491, 395)
        self.centralwidget.setObjectName("centralwidget")
        self.widget.setGeometry(QtCore.QRect(0, 0, 481, 351))
        self.widget.setObjectName("widget")
        self.title.setGeometry(QtCore.QRect(50, 20, 361, 41))
        font = QtGui.QFont()
        font.setFamily("Sitka Heading")
        font.setPointSize(14)
        self.title.setFont(font)
        self.title.setObjectName("title")
        self.label_year.setGeometry(QtCore.QRect(30, 70, 61, 31))
        self.label_year.setObjectName("label_year")
        self.lineEdit_year.setGeometry(QtCore.QRect(100, 80, 113, 22))
        self.lineEdit_year.setObjectName("lineEdit_year")
        self.label_predict.setGeometry(QtCore.QRect(30, 160, 181, 21))
        self.label_predict.setObjectName("label_predict")
        self.pushButton_predict.setGeometry(QtCore.QRect(40, 250, 101, 31))
        self.pushButton_predict.setObjectName("pushButton")
        self.pushButton_predict.clicked.connect(self.predict)
        self.pushButton_close.setGeometry(QtCore.QRect(280, 250, 101, 31))
        self.pushButton_close.setObjectName("pushButton_2")
        self.pushButton_close.clicked.connect(QCoreApplication.instance().quit)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 491, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "GDP per Capital"))
        self.title.setText(_translate("MainWindow", "Predict gdp per capita of VietNam "))
        self.label_year.setText(_translate("MainWindow", "Year:"))
        self.label_predict.setText(_translate("MainWindow", "GDP Predict:"))
        self.pushButton_predict.setText(_translate("MainWindow", "Predict"))
        self.pushButton_close.setText(_translate("MainWindow", "Close"))

    def predict(self):
        year = int(self.lineEdit_year.text())
        X_train, X_test, y_train, y_test = train_test_split(years, gdp_per_cap, test_size=0.2, random_state=0)
        X = np.array([X_train]).T

        # X_t = np.array([X_test]).T
        # xt = np.ones((X_t.shape[0], 1))
        # XT = np.concatenate((xt, X_t), axis=1)

        year = np.array([[year]]).T
        yeart = np.ones((year.shape[0], 1))
        Year = np.concatenate((yeart, year), axis=1)

        one = np.ones((X.shape[0], 1))
        Xbar = np.concatenate((one, X), axis=1)
        lin = LinearRegression(fit_intercept=False)
        lin.fit(Xbar, y_train)
        Y_pre = lin.predict(Year)
        self.label_predict.setText("GDP Predict: {} $".format(float(Y_pre[0])))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
